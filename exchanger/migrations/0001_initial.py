# Generated by Django 2.2.6 on 2020-01-16 10:20

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=datetime.datetime.now, verbose_name='Time of created')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Time of last update')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Time then row was deleted')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Is deleted row')),
                ('name', models.CharField(max_length=50, verbose_name='Currency name')),
                ('slug', models.CharField(max_length=50, verbose_name='Currency slug')),
                ('active', models.BooleanField(default=True, verbose_name='it is used')),
                ('is_token', models.BooleanField(default=False, verbose_name='Is token currency')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='PlatformWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=datetime.datetime.now, verbose_name='Time of created')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Time of last update')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Time then row was deleted')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Is deleted row')),
                ('address', models.CharField(max_length=100, unique=True, verbose_name='Wallet address')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active wallet')),
                ('external_id', models.IntegerField(db_index=True, unique=True, verbose_name='External id from blockhain')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallets', to='exchanger.Currency', verbose_name='Wallet currency_slug')),
            ],
            options={
                'verbose_name': 'Platform Wallet',
                'verbose_name_plural': 'Platform Wallets',
            },
        ),
        migrations.CreateModel(
            name='OutPutTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=datetime.datetime.now, verbose_name='Time of created')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Time of last update')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Time then row was deleted')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Is deleted row')),
                ('trx_hash', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True, verbose_name='Transaction hash')),
                ('value', models.DecimalField(decimal_places=5, max_digits=16, verbose_name='Transaction amount')),
                ('to_address', models.CharField(max_length=100, verbose_name='Address to which the currency will transfer')),
                ('from_address', models.CharField(max_length=100, verbose_name='Address from the currency will transfer')),
                ('status', models.SmallIntegerField(choices=[(1, 'SUCCESS'), (2, 'NOT_FOUND'), (3, 'FAILED'), (4, 'CONFIRMED'), (5, 'PENDING'), (6, 'NEW')], db_index=True, default=6, verbose_name='Transaction status')),
                ('confirmed_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Datetime transaction confirmed')),
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='Internal hash for identification trx')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchanger_outputtransaction_related', to='exchanger.Currency', verbose_name='Transaction currency')),
            ],
            options={
                'verbose_name': 'OutPut Transaction',
                'verbose_name_plural': 'OutPut Transactions',
            },
        ),
        migrations.CreateModel(
            name='InputTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=datetime.datetime.now, verbose_name='Time of created')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Time of last update')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Time then row was deleted')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Is deleted row')),
                ('trx_hash', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True, verbose_name='Transaction hash')),
                ('value', models.DecimalField(decimal_places=5, max_digits=16, verbose_name='Transaction amount')),
                ('to_address', models.CharField(max_length=100, verbose_name='Address to which the currency will transfer')),
                ('from_address', models.CharField(max_length=100, verbose_name='Address from the currency will transfer')),
                ('status', models.SmallIntegerField(choices=[(1, 'SUCCESS'), (2, 'NOT_FOUND'), (3, 'FAILED'), (4, 'CONFIRMED'), (5, 'PENDING'), (6, 'NEW')], db_index=True, default=6, verbose_name='Transaction status')),
                ('confirmed_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Datetime transaction confirmed')),
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='Internal hash for identification trx')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchanger_inputtransaction_related', to='exchanger.Currency', verbose_name='Transaction currency')),
            ],
            options={
                'verbose_name': 'Input Transaction',
                'verbose_name_plural': 'Input Transactions',
            },
        ),
        migrations.CreateModel(
            name='ExchangeHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=datetime.datetime.now, verbose_name='Time of created')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Time of last update')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Time then row was deleted')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Is deleted row')),
                ('user_email', models.EmailField(max_length=254, verbose_name='Email of user')),
                ('fee', models.DecimalField(decimal_places=8, max_digits=16, verbose_name='Transaction fee')),
                ('issue_rate', models.DecimalField(decimal_places=8, default=0, max_digits=16, verbose_name='Rate in usd')),
                ('status', models.SmallIntegerField(choices=[(0, 'UNKNOWN STATUS'), (1, 'NEW'), (2, 'WAITING MONEY FROM USER'), (3, 'MONEY TRANSFER IS INSUFFICIENT'), (4, 'DEPOSIT_PAID'), (5, 'CREATING MONEY TRANSFER TO USER'), (6, 'TRANSFER IN STATUS SUCCESS'), (7, 'EXCHANGE IS GONE'), (8, 'FAILED EXCHANGE'), (9, 'RETURNING_DEPOSIT'), (10, 'DEPOSIT_RETURNED'), (11, 'CALCULATING')], db_index=True, default=0)),
                ('ingoing_amount', models.DecimalField(decimal_places=5, max_digits=16, verbose_name='From exchange amount')),
                ('outgoing_amount', models.DecimalField(decimal_places=5, max_digits=16, verbose_name='To exchange amount')),
                ('from_address', models.CharField(max_length=50, verbose_name='Address from we are expect trx')),
                ('to_address', models.CharField(max_length=50, verbose_name='Address to which we are send')),
                ('from_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_history', to='exchanger.Currency', verbose_name='Currency from')),
                ('ingoing_wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_history', to='exchanger.PlatformWallet', verbose_name='Which wallet does the input transaction belong to')),
                ('outgoing_wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exchanger.PlatformWallet', verbose_name='Which wallet does the output transaction belong to')),
                ('to_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exchanger.Currency', verbose_name='Currency to')),
                ('transaction_input', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_history', to='exchanger.InputTransaction')),
                ('transaction_output', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_history', to='exchanger.OutPutTransaction')),
            ],
            options={
                'verbose_name': 'Exchange History',
                'verbose_name_plural': 'Exchange Histories',
            },
        ),
    ]
